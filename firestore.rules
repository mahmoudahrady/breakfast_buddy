rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read and write their own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Orders collection - authenticated users can read and create orders
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null &&
        (resource.data.createdBy == request.auth.uid ||
         request.auth.uid in resource.data.participants);
    }

    // Groups collection - members can read, admin can update/delete
    match /groups/{groupId} {
      // Allow any authenticated user to read (needed for joining groups)
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Allow admin to update anything, OR allow users to add themselves to memberIds (joining)
      allow update: if request.auth != null && (
        resource.data.adminId == request.auth.uid ||
        (request.auth.uid in request.resource.data.memberIds &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['memberIds']))
      );
      allow delete: if request.auth != null &&
        resource.data.adminId == request.auth.uid;
    }

    // Group members collection - members can read, admin can write
    match /groupMembers/{memberId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if request.auth != null &&
        (get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.adminId == request.auth.uid ||
         resource.data.userId == request.auth.uid);
    }

    // Group restaurants collection - members can read, only admin can add, admin or creator can delete
    match /groupRestaurants/{restaurantId} {
      allow read: if request.auth != null;
      // Only group admin can add restaurants
      allow create: if request.auth != null &&
        get(/databases/$(database)/documents/groups/$(request.resource.data.groupId)).data.adminId == request.auth.uid;
      // Allow delete if user is admin OR if user added the restaurant
      allow delete: if request.auth != null &&
        (resource.data.addedBy == request.auth.uid ||
         get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.adminId == request.auth.uid);
    }

    // Order sessions collection
    match /orderSessions/{sessionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
    }

    // Payments collection
    match /payments/{paymentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
    }
  }
}
